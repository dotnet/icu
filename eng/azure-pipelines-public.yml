variables:
  - template: /eng/common-variables.yml
  - template: /eng/common/templates/variables/pool-providers.yml
  - name: LinuxImage
    value: build.ubuntu.2204.amd64.open
  - name: WindowsImage
    value: 1es-windows-2022-open

trigger:
  batch: true
  branches:
    include:
    - dotnet/main
    - dotnet/release/*

pr:
  branches:
    include:
    - dotnet/main
    - dotnet/release/*

stages:
- stage: build
  displayName: Build
  jobs:
  - template: /eng/common/templates/jobs/jobs.yml
    parameters:
      enablePublishBuildArtifacts: true
      enablePublishBuildAssets: true
      enablePublishUsingPipelines: true
      jobs:

      ############ BROWSER BUILD ############
      - job: Build_Browser
        displayName: Browser
        timeoutInMinutes: 360
        pool:
          name: $(DncEngPublicBuildPool)
          demands: ImageOverride -equals $(LinuxImage)
        container:
          image: mcr.microsoft.com/dotnet-buildtools/prereqs:cbl-mariner-2.0-cross-amd64
        steps:
        - bash: |
            ./build.sh --ci --restore --build --configuration $(_BuildConfig) /p:TargetOS=Browser /p:TargetArchitecture=wasm $(_InternalBuildArgs)
          displayName: Build

      - job: Build_Browser_Threading
        displayName: Browser_Threading
        timeoutInMinutes: 360
        pool:
          name: $(DncEngPublicBuildPool)
          demands: ImageOverride -equals $(LinuxImage)
        container:
          image: mcr.microsoft.com/dotnet-buildtools/prereqs:cbl-mariner-2.0-cross-amd64
        steps:
        - bash: |
            ./build.sh --ci --restore --build --configuration $(_BuildConfig) /p:TargetOS=Browser /p:TargetArchitecture=wasm /p:WasmEnableThreads=true $(_InternalBuildArgs)
          displayName: Build

      ############ WASI BUILD ############
      - job: Build_Wasi
        displayName: Wasi
        timeoutInMinutes: 360
        pool:
          name: $(DncEngPublicBuildPool)
          demands: ImageOverride -equals $(LinuxImage)
        container:
          image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-20.04-webassembly-net8-20230327150037-4404b5c
        steps:
        - bash: |
            ./build.sh --ci --restore --build --configuration $(_BuildConfig) /p:TargetOS=Wasi /p:TargetArchitecture=wasm $(_InternalBuildArgs)
          displayName: Build

      - job: Build_Wasi_Threading
        displayName: Wasi_Threading
        timeoutInMinutes: 360
        pool:
          name: $(DncEngPublicBuildPool)
          demands: ImageOverride -equals $(LinuxImage)
        container:
          image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-20.04-webassembly-net8-20230327150037-4404b5c
        steps:
        - bash: |
            ./build.sh --ci --restore --build --configuration $(_BuildConfig) /p:TargetOS=Wasi /p:TargetArchitecture=wasm /p:WasmEnableThreads=true $(_InternalBuildArgs)
          displayName: Build

      ############ Android BUILD ############
      - job: Build_Android
        displayName: Android
        timeoutInMinutes: 360
        pool:
          name: $(DncEngPublicBuildPool)
          demands: ImageOverride -equals $(LinuxImage)
        container:
          image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-android-20220131172314-3983b4e
        steps:
        - bash: |
            ./build.sh --ci --restore --build --configuration $(_BuildConfig) /p:TargetOS=Android /p:TargetArchitecture=x64 $(_InternalBuildArgs)
            ./build.sh --ci --restore --build --configuration $(_BuildConfig) /p:TargetOS=Android /p:TargetArchitecture=x86 $(_InternalBuildArgs)
            ./build.sh --ci --restore --build --configuration $(_BuildConfig) /p:TargetOS=Android /p:TargetArchitecture=arm64 $(_InternalBuildArgs)
            ./build.sh --ci --restore --build --configuration $(_BuildConfig) /p:TargetOS=Android /p:TargetArchitecture=arm $(_InternalBuildArgs)
          displayName: Build