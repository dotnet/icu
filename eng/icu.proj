<Project>
  <Import Project="$(RepositoryEngineeringDir)Versions.props" />

  <Target Name="Build" Condition="'$(PackOnly)' != 'true'" DependsOnTargets="PatchEmscripten;CopyEmscriptenVersion;DownloadWasiSdk">
    <Error Condition="'$(TargetOS)' == ''" Text="TargetOS needs to be specified!" />
    <Error Condition="'$(TargetArchitecture)' == ''" Text="TargetArchitecture needs to be specified!" />

    <PropertyGroup>
      <_ExtraParams Condition="'$(WasmEnableThreads)' == 'true'">WASM_ENABLE_THREADS=true</_ExtraParams>
    </PropertyGroup>

    <!-- Directory to provision and use WASI sdk if WASI_SDK_PATH env variable is not set -->
    <PropertyGroup Condition="'$(TargetOS)' == 'Wasi' and '$(WASI_SDK_PATH)' == ''">
      <WASI_SDK_PATH Condition="'$(WASI_SDK_PATH)' == ''">$(RepoRoot)artifacts/wasi-sdk</WASI_SDK_PATH>
    </PropertyGroup>

    <Copy SourceFiles="$(MSBuildThisFileDirectory)\..\icu-filters\curr-root.txt" 
          DestinationFiles="$(MSBuildThisFileDirectory)\..\icu\icu4c\source\data\curr\root.txt"/> 
    <Exec WorkingDirectory="$(MSBuildThisFileDirectory)"
          Command="make -f icu.mk all TARGET_OS=$(TargetOS.ToLower()) TARGET_ARCHITECTURE=$(TargetArchitecture) ICU_TRACING=$(IcuTracing) WASI_SDK_PATH=$(WASI_SDK_PATH) $(_ExtraParams) SHELL=/bin/bash"
          IgnoreStandardErrorWarningFormat="true" />
  </Target>
  <Target Name="Restore" />
  <Target Name="Test" />
  <Target Name="Pack" DependsOnTargets="Build">
    <MSBuild Projects="$(MSBuildThisFileDirectory)nuget\Microsoft.NETCore.Runtime.ICU.Transport.pkgproj" Targets="Build" />
  </Target>

  <!-- 
    The version of emscripten we are on, emcmake does not pass 'experimental-wasm-threads' to node. In order for the build to  
    succeed, we need to provide a patched version of that file. Ideally, fixing upstream would be best, but until then, patch.
  -->
  <Target Name="PatchEmscripten" Condition="'$(TargetOS)' == 'Browser' and '$(WasmEnableThreads)' == 'true'">
    <Copy SourceFiles="$(MSBuildThisFileDirectory)patches\emcc.py"
          DestinationFolder="$(EMSDK_PATH)\upstream\emscripten" />
  </Target>
  <Target Name="CopyEmscriptenVersion" Condition="'$(TargetOS)' == 'Browser'">
    <ReadLinesFromFile File="$(EMSDK_PATH)\upstream\emscripten\emscripten-version.txt" >
      <Output TaskParameter="Lines"
              ItemName="_ItemsFromEmscriptenVersionFile"/>
    </ReadLinesFromFile>
    <WriteLinesToFile
            File="$(RepoRoot)\artifacts\bin\icu-browser-wasm\emscripten-version.txt"
            Lines="@(_ItemsFromEmscriptenVersionFile->Replace('&quot;', ''))"
            Overwrite="true" />
  </Target>
  <Target Name="DownloadWasiSdk" Condition="'$(TargetOS)' == 'Wasi'  and '$(WASI_SDK_PATH)' == ''">
    <PropertyGroup>
      <_WasiLocalPath>$(RepoRoot)\artifacts</_WasiLocalPath>
      <_WasiSdkUrl Condition="$([MSBuild]::IsOSPlatform('Linux'))">https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-$(WasiSdkVersion)/wasi-sdk-$(WasiSdkVersion).0-linux.tar.gz</_WasiSdkUrl>
      <_WasiSdkUrl Condition="$([MSBuild]::IsOSPlatform('OSX'))">https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-$(WasiSdkVersion)/wasi-sdk-$(WasiSdkVersion).0-macos.tar.gz</_WasiSdkUrl>
    </PropertyGroup>

    <Error Condition="'$(_WasiSdkUrl)' == ''" Text="_WasiSdkUrl is not set!" />

    <Exec Command="rm -rf wasi-sdk-*/ wasi-sdk/ &amp;&amp; curl -L -o- $(_WasiSdkUrl) --fail -S | tar -xvz &amp;&amp; mv wasi-sdk-$(WasiSdkVersion).*/ wasi-sdk/"
          WorkingDirectory="$(_WasiLocalPath)"
          IgnoreStandardErrorWarningFormat="true" />

  </Target>
</Project>
