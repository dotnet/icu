From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jeff Genovy <29107334+jefgen@users.noreply.github.com>
Date: Fri, 20 Nov 2020 11:35:20 -0800
Subject: ICU-PATCH: ICU-20506 Don't call UPRV_UNREACHABLE if timezoneTypes.res
 can't be loaded.


diff --git a/icu4c/source/common/uloc_keytype.cpp b/icu4c/source/common/uloc_keytype.cpp
index 12dc300492..9f129a931c 100644
--- a/icu4c/source/common/uloc_keytype.cpp
+++ b/icu4c/source/common/uloc_keytype.cpp
@@ -170,11 +170,14 @@ initFromResourceBundle(UErrorCode& sts) {
         // look up type map for the key, and walk through the mapping data
         LocalUResourceBundlePointer typeMapResByKey(ures_getByKey(typeMapRes.getAlias(), legacyKeyId, NULL, &sts));
         if (U_FAILURE(sts)) {
-            // We fail here if typeMap does not have an entry corresponding to every entry in keyMap (should
-            // not happen for valid keyTypeData), or if ures_getByKeyfails fails for some other reason
-            // (e.g. data file cannot be loaded, using stubdata, over-aggressive data filtering has removed
-            // something like timezoneTypes.res, etc.). Error code is already set. See ICU-21669.
-            UPRV_UNREACHABLE_ASSERT;
+
+            // ICU-20506
+            // Note: The code used to call `U_ASSERT(FALSE)` here, but this was changed in ICU-20074
+            // to unconditionally call the macro `UPRV_UNREACHABLE` instead.
+            // However, it is possible to reach this code path if 'timezoneTypes.res' can't be found or loaded.
+            // In this case the code actually _can_ carry on (it shouldn't be a fatal error), but it means that
+            // we lose the ability to convert BCP47 timezone identifiers (which aren't commonly used). 
+            U_ASSERT(FALSE);
         } else {
             LocalUResourceBundlePointer typeMapEntry;
 
